# Generated by roxygen2: do not edit by hand

S3method("!=",fastai.torch_core.TensorMask)
S3method("+",torch.nn.modules.container.Sequential)
S3method("==",torch.Tensor)
S3method(fit,fastai.learner.Learner)
S3method(fit,fastai.tabular.learner.TabularLearner)
S3method(fit,fastai.vision.gan.GANLearner)
S3method(mean,torch.Tensor)
S3method(predict,fastai.tabular.learner.TabularLearner)
S3method(print,pydicom.dataset.FileDataset)
S3method(summary,fastai.learner.Learner)
S3method(summary,fastai.tabular.learner.TabularLearner)
export(AWD_LSTM)
export(AWD_QRNN)
export(Adam)
export(AdaptiveGANSwitcher)
export(AdaptiveLoss)
export(AddChannels)
export(AffineCoordTfm)
export(BBoxBlock)
export(BBoxLabeler)
export(BBoxLblBlock)
export(BaseTokenizer)
export(CSVLogger)
export(Categorify)
export(CategoryBlock)
export(ColReader)
export(ColSplitter)
export(CollabDataLoaders_from_dblock)
export(CollabDataLoaders_from_df)
export(Contrast)
export(CropPad)
export(DataBlock)
export(Datasets)
export(DenseResBlock)
export(DeterministicDihedral)
export(DeterministicDraw)
export(DeterministicFlip)
export(Dihedral)
export(DihedralItem)
export(DynamicUnet)
export(EmbeddingDropout)
export(FileSplitter)
export(FillMissing)
export(FillStrategy_COMMON)
export(FillStrategy_CONSTANT)
export(FillStrategy_MEDIAN)
export(FixedGANSwitcher)
export(FlipItem)
export(ForgetMultGPU)
export(GANDiscriminativeLR)
export(GANLearner_wgan)
export(GANLoss)
export(GANModule)
export(GANTrainer)
export(Hue)
export(Image)
export(ImageBW_create)
export(ImageBlock)
export(ImageDataLoaders_from_csv)
export(ImageDataLoaders_from_dblock)
export(ImageDataLoaders_from_df)
export(ImageDataLoaders_from_folder)
export(ImageDataLoaders_from_lists)
export(ImageDataLoaders_from_name_re)
export(ImageDataLoaders_from_path_func)
export(ImageDataLoaders_from_path_re)
export(ImagePoints)
export(Image_create)
export(Image_open)
export(Image_resize)
export(IndexSplitter)
export(InvisibleTensor)
export(LMDataLoader)
export(LMLearner)
export(LMLearner_predict)
export(LabeledBBox)
export(LightingTfm)
export(LinearDecoder)
export(MaskBlock)
export(Mask_create)
export(Module)
export(Normalize)
export(Normalize_from_stats)
export(Numericalize)
export(OldRandomCrop)
export(Perplexity)
export(Pipeline)
export(PointBlock)
export(PointScaler)
export(PoolingLinearClassifier)
export(QRNN)
export(QRNNLayer)
export(RNNDropout)
export(RandTransform)
export(RandomCrop)
export(RandomErasing)
export(RandomResizedCrop)
export(RandomResizedCropGPU)
export(RandomSplitter)
export(RatioResize)
export(ResLayer)
export(ResNet)
export(Resize)
export(Saturation)
export(SegmentationDataLoaders_from_label_func)
export(SentenceEncoder)
export(SentencePieceTokenizer)
export(SequentialRNN)
export(SortedDL)
export(SpacyTokenizer)
export(SqueezeNet)
export(TabularDataTable)
export(TensorBBox)
export(TensorBBox_create)
export(TensorImage)
export(TensorImageBW)
export(TensorMultiCategory)
export(TensorPoint)
export(TensorPoint_create)
export(TextBlock)
export(TextBlock_from_df)
export(TextBlock_from_folder)
export(TextDataLoaders_from_df)
export(TextDataLoaders_from_folder)
export(TextLearner)
export(TextLearner_load_encoder)
export(TextLearner_load_pretrained)
export(TextLearner_save_encoder)
export(TfmdDL)
export(ToTensor)
export(TokenizeWithRules)
export(Tokenizer)
export(Transform)
export(TransformBlock)
export(URLs_ADULT_SAMPLE)
export(URLs_AG_NEWS)
export(URLs_AMAZON_REVIEWSAMAZON_REVIEWS)
export(URLs_AMAZON_REVIEWS_POLARITY)
export(URLs_BIWI_HEAD_POSE)
export(URLs_CALTECH_101)
export(URLs_CAMVID)
export(URLs_CAMVID_TINY)
export(URLs_CARS)
export(URLs_CIFAR)
export(URLs_CIFAR_100)
export(URLs_COCO_TINY)
export(URLs_CUB_200_2011)
export(URLs_DBPEDIA)
export(URLs_DOGS)
export(URLs_FLOWERS)
export(URLs_FOOD)
export(URLs_HUMAN_NUMBERS)
export(URLs_IMAGENETTE)
export(URLs_IMAGENETTE_160)
export(URLs_IMAGENETTE_320)
export(URLs_IMAGEWOOF)
export(URLs_IMAGEWOOF_160)
export(URLs_IMAGEWOOF_320)
export(URLs_IMDB)
export(URLs_IMDB_SAMPLE)
export(URLs_LSUN_BEDROOMS)
export(URLs_ML_SAMPLE)
export(URLs_MNIST)
export(URLs_MNIST_SAMPLE)
export(URLs_MNIST_TINY)
export(URLs_MNIST_VAR_SIZE_TINY)
export(URLs_MOVIE_LENS_ML_100k)
export(URLs_MT_ENG_FRA)
export(URLs_OPENAI_TRANSFORMER)
export(URLs_PASCAL_2007)
export(URLs_PASCAL_2012)
export(URLs_PETS)
export(URLs_PLANET_SAMPLE)
export(URLs_PLANET_TINY)
export(URLs_S3_COCO)
export(URLs_S3_IMAGE)
export(URLs_S3_IMAGELOC)
export(URLs_S3_MODEL)
export(URLs_S3_NLP)
export(URLs_SKIN_LESION)
export(URLs_SOGOU_NEWS)
export(URLs_WIKITEXT)
export(URLs_WIKITEXT_TINY)
export(URLs_WT103_BWD)
export(URLs_WT103_FWD)
export(URLs_YAHOO_ANSWERS)
export(URLs_YELP_REVIEWS)
export(URLs_YELP_REVIEWS_POLARITY)
export(UnetBlock)
export(Warp)
export(WeightDropout)
export(WideResNet)
export(XResNet)
export(accuracy)
export(accuracy_thresh_expand)
export(add_cyclic_datepart)
export(add_datepart)
export(add_test)
export(affine_coord)
export(affine_mat)
export(alexnet)
export(apply_perspective)
export(array)
export(aspect)
export(aug_transforms)
export(awd_lstm_clas_split)
export(awd_lstm_lm_split)
export(basic_critic)
export(basic_generator)
export(bb_pad)
export(clean_raw_keys)
export(clip_remove_empty)
export(cnn_config)
export(cnn_learner)
export(collab_learner)
export(create_body)
export(create_cnn_model)
export(create_head)
export(cutout_gaussian)
export(data_collate)
export(dataloaders)
export(dcmread)
export(decode_spec_tokens)
export(default_split)
export(densenet121)
export(densenet161)
export(densenet169)
export(densenet201)
export(dihedral_mat)
export(dropout_mask)
export(error_rate)
export(fa_collate)
export(fa_convert)
export(find_coeffs)
export(fit)
export(fit_one_cycle)
export(fix_html)
export(flip_mat)
export(float)
export(forget_mult_CPU)
export(from_csv)
export(gan_critic)
export(gan_loss_from_func)
export(generate_noise)
export(get_annotations)
export(get_bias)
export(get_confusion_matrix)
export(get_dcm_matrix)
export(get_dicom_files)
export(get_emb_sz)
export(get_grid)
export(get_image_files)
export(get_language_model)
export(get_text_classifier)
export(get_text_files)
export(get_weights)
export(grayscale)
export(has_pool_type)
export(hsv2rgb)
export(image2tensor)
export(imagenet_stats)
export(install_fastai)
export(language_model_learner)
export(load_ignore_keys)
export(load_image)
export(load_model_text)
export(load_tokenized_csv)
export(lr_find)
export(lr_find_)
export(make_vocab)
export(mask2bbox)
export(mask_from_blur)
export(mask_tensor)
export(masked_concat_pool)
export(match_embeds)
export(mobilenet_v2)
export(most_confused)
export(n_px)
export(nn)
export(norm_apply_denorm)
export(one_batch)
export(open_mask)
export(open_mask_rle)
export(pad_input)
export(pad_input_chunk)
export(parallel_tokenize)
export(pca)
export(predict)
export(random_batch)
export(replace_all_caps)
export(replace_maj)
export(replace_rep)
export(replace_wrep)
export(reshape)
export(resize_max)
export(resnet101)
export(resnet152)
export(resnet18)
export(resnet34)
export(resnet50)
export(reverse_text)
export(rgb2hsv)
export(rm_useless_spaces)
export(rotate_mat)
export(set_freeze_model)
export(setup_aug_tfms)
export(shape)
export(spec_add_spaces)
export(split_by_idx)
export(squeezenet1_0)
export(squeezenet1_1)
export(tabular_TabularList_show_xys)
export(tabular_TabularList_show_xyzs)
export(tabular_apply)
export(tabular_learner)
export(tensor)
export(text_classifier_learner)
export(to_bytes_format)
export(to_image)
export(to_matrix)
export(to_thumb)
export(tokenize1)
export(tokenize_csv)
export(tokenize_df)
export(tokenize_files)
export(tokenize_folder)
export(tokenize_texts)
export(trainable_params)
export(unet_config)
export(unet_learner)
export(vgg11_bn)
export(vgg13_bn)
export(vgg16_bn)
export(vgg19_bn)
export(win_abdoment_soft)
export(win_brain)
export(win_brain_bone)
export(win_brain_soft)
export(win_liver)
export(win_lungs)
export(win_mediastinum)
export(win_spine_bone)
export(win_spine_soft)
export(win_stroke)
export(win_subdural)
export(wrn_22)
export(xception)
export(xresnet101)
export(xresnet152)
export(xresnet18)
export(xresnet18_deep)
export(xresnet34)
export(xresnet34_deep)
export(xresnet50)
export(xresnet50_deep)
export(zoom)
export(zoom_mat)
importFrom(data.table,":=")
importFrom(data.table,rbindlist)
importFrom(data.table,set)
importFrom(generics,fit)
importFrom(reticulate,py_install)
importFrom(reticulate,r_to_py)
importFrom(stats,predict)
