on: [pull_request]

name: dev_version

jobs:
  R-CMD:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (fastai ${{ matrix.config.fastai }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: macOS-latest, fastai: 'git+git://github.com/fastai/fastai@master'}
        - { os: ubuntu-16.04,  cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest", fastai: 'git+git://github.com/fastai/fastai@master'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      PIP_NO_WARN_SCRIPT_LOCATION: false
      FASTAI_VERSION: ${{ matrix.config.fastai }}
      RETICULATE_AUTOCONFIGURE: 'FALSE'
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install MacOS/Windows/Linux
        run: |
          Rscript -e "install.packages('remotes')"
          Rscript -e "remotes::install_deps(dependencies =  TRUE)"
          Rscript -e "remotes::install_cran('rcmdcheck')"

      - name: Install Python
        run: |
          Rscript -e "remotes::install_github('rstudio/reticulate')"
          Rscript -e "try(reticulate::install_miniconda())"
          Rscript -e "reticulate::conda_create('r-reticulate', packages = 'python==3.6.10')"
          Rscript -e "reticulate::py_install(c('setuptools', 'wheel', 'requests'), pip = TRUE)"
      - name: Install FASTAI
        run: |
          Rscript -e "reticulate::py_config()"
          Rscript -e "remotes::install_local()"
          Rscript -e "fastai::install_fastai()"

      - name: Check
        continue-on-error: ${{ matrix.config.allow_failure }}



        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'error', check_dir = 'check')"
