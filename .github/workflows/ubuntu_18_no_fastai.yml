on: [push, pull_request]

name: ubuntu_18_no_fastai

jobs:
  R-CMD:
    runs-on: ${{ matrix.config.os }}

    name: (fastai ${{ matrix.config.fastai }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - { os: ubuntu-18.04,  cran: "https://demo.rstudiopm.com/all/__linux__/xenial/latest",  fastai: '2.0.0'}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      PIP_NO_WARN_SCRIPT_LOCATION: false
      FASTAI_VERSION: ${{ matrix.config.fastai }}
      RETICULATE_AUTOCONFIGURE: 'FALSE'
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v1

      - uses: r-lib/actions/setup-r@master

      - uses: r-lib/actions/setup-pandoc@master

      - name: Install dependencies if Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install curl
          sudo echo "deb http://mirrors.kernel.org/ubuntu/ xenial main" | sudo tee -a /etc/apt/sources.list && sudo apt-get update && sudo apt install -y --allow-unauthenticated libpng12-0

      - name: Install Linux
        run: |
          Rscript -e "install.packages('remotes')"
          Rscript -e "remotes::install_deps(dependencies =  TRUE)"
          Rscript -e "remotes::install_cran('rcmdcheck')"

      - name: Install Python
        run: |
          Rscript -e "install.packages(c('reticulate','png','Rcpp'))"
          Rscript -e "try(reticulate::install_miniconda())"


      - name: Install fastai
        run: |
          Rscript -e "reticulate::conda_create('r-reticulate', python_version = '3.9')"
          Rscript -e "remotes::install_local()"
          Rscript -e "Sys.setlocale('LC_ALL','C')"

      - name: Check
        continue-on-error: ${{ matrix.config.allow_failure }}



        run: Rscript -e "rcmdcheck::rcmdcheck(args = '--no-manual', error_on = 'error', check_dir = 'check')"

